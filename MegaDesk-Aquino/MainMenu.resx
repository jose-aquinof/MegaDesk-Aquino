<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhAAEAAYUAAAAAAC9OVDBNVDFNVDBNVTFNVTBOVDFOVDBOVTFOVT5PWkJZXEpPYFNRZGNUbWtU
        cXFWdXdXeXxYfFBhY2Vxb215dXV/eXyFfq6Ld4JZgIdZhIxbhpVdjZldkKFflaVgmKlhm7BjoLNjo7dk
        pbplqL1mqsBnrcNor8lps8xqts9ruNJsuoOLg4mQh4+WjKCkmKWonKqtn7a4qbu8rMWZgb/AsMfHts7O
        u9nYxNzbx+bkz+nn0QAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAAAACwAAAAAAAEA
        AQAI/wABCBxIsKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhTqlzJsqXLlzBj
        ypxJs6bNmzhz6tzJs6fPn0CDCh0aM4HRo0iTKl3KtKnTp0eJSi0KtarVq1inamWJtavXr0a3ijUJtqxZ
        p2PTijzLtm0CtXA9up0LNq5djXTzZr3Lt6Lev1D7CpbYdIXhw4gTK17MuLHjpoMjOyzsuLLly4whS96c
        kDLmz6AzM+VM2qDn0KhDay7N+nTq15ZXsybtGrbtxbJnb659u7fh3Loj8/Z9G3hwwcMtoyjxOQUJ0MaP
        803e+ASEox1UOLaOXXvs0dIlU/9fPEJB0g2NTTBIKuFy9PBxxycuv5S5YvVLR3xfCl8408/0LfXBfest
        1cF+SvU3mHyGBbiUB4nhx9SBlb2n4FgMOrjUc4dJyJR+FYJ34V3yaaiUBoidUCBTEbgn4ojx/eeYiUk9
        kMJhJay4lI0u8gejXdTRiBSPhqnoFJEIJvUjkDIuVoJ5TSGZ45E3YmbhkkQNp4IDVB5mZJRVWvkilmIN
        J0KXhk0JpmpjkqnVcB6sWaSOSiH52ZVuAmUmU1LSWWOY0LWZZ5ZNJpZCA3WGqSafgAbq46BvFpoYCSsG
        IEGYXzIKG56Q8kQdChxEkIEIiC26Y6NsPtopoUuhlumpxQkVuupPDCLmIayxqjprULUadmuivnG6/+tN
        vf76J3HCDltTrcYOieqmsiqrE4OmAkvcCslKK5N8r1p7bbbawjRetcde+1u04dpEXbflmostuunSlJyK
        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
        /v2Fv/73z//++///KxEQADs=
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhAAEAAYUAAAAAAC9OVDBNVDFNVDBNVTFNVTBOVDFOVDBOVTFOVT5PWkJZXEpPYFNRZGNUbWtU
        cXFWdXdXeXxYfFBhY2Vxb215dXV/eXyFfq6Ld4JZgIdZhIxbhpVdjZldkKFflaVgmKlhm7BjoLNjo7dk
        pbplqL1mqsBnrcNor8lps8xqts9ruNJsuoOLg4mQh4+WjKCkmKWonKqtn7a4qbu8rMWZgb/AsMfHts7O
        u9nYxNzbx+bkz+nn0QAAAAAAAAAAAAAAACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAAAAACwAAAAAAAEA
        AQAI/wABCBxIsKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhTqlzJsqXLlzBj
        ypxJs6bNmzhz6tzJs6fPn0CDCh0aM4HRo0iTKl3KtKnTp0eJSi0KtarVq1inamWJtavXr0a3ijUJtqxZ
        p2PTijzLtm0CtXA9up0LNq5djXTzZr3Lt6Lev1D7CpbYdIXhw4gTK17MuLHjpoMjOyzsuLLly4whS96c
        kDLmz6AzM+VM2qDn0KhDay7N+nTq15ZXsybtGrbtxbJnb659u7fh3Loj8/Z9G3hwwcMtoyjxOQUJ0MaP
        803e+ASEox1UOLaOXXvs0dIlU/9fPEJB0g2NTTBIKuFy9PBxxycuv5S5YvVLR3xfCl8408/0LfXBfest
        1cF+SvU3mHyGBbiUB4nhx9SBlb2n4FgMOrjUc4dJyJR+FYJ34V3yaaiUBoidUCBTEbgn4ojx/eeYiUk9
        kMJhJay4lI0u8gejXdTRiBSPhqnoFJEIJvUjkDIuVoJ5TSGZ45E3YmbhkkQNp4IDVB5mZJRVWvkilmIN
        J0KXhk0JpmpjkqnVcB6sWaSOSiH52ZVuAmUmU1LSWWOY0LWZZ5ZNJpZCA3WGqSafgAbq46BvFpoYCSsG
        IEGYXzIKG56Q8kQdChxEkIEIiC26Y6NsPtopoUuhlumpxQkVuupPDCLmIayxqjprULUadmuivnG6/+tN
        vf76J3HCDltTrcYOieqmsiqrE4OmAkvcCslKK5N8r1p7bbbawjRetcde+1u04dpEXbflmostuunSlJyK
        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
        /v2Fv/73z//++///KxEQADs=
</value>
  </data>
</root>